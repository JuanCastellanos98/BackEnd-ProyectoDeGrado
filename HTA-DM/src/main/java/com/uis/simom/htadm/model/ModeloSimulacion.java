package com.uis.simom.htadm.model;

//import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

@Service
public class ModeloSimulacion {

	List<Double> listRiesgoHTA = new ArrayList<>();
	List<Double> listEdad = new ArrayList<>();
	List<Double> listPeso = new ArrayList<>();
	List<Double> listPal = new ArrayList<>();
	List<Double> listImc = new ArrayList<>();
	List<Double> listRiesgoDm2 = new ArrayList<>();

	public ModeloSimulacion() {

	}

	public ModeloSimulacion(List<Double> listRiesgoHTA, List<Double> listEdad, List<Double> listPeso,
			List<Double> listPal, List<Double> listImc, List<Double> listRiesgoDm2) {
		super();
		this.listRiesgoHTA = listRiesgoHTA;
		this.listEdad = listEdad;
		this.listPeso = listPeso;
		this.listPal = listPal;
		this.listImc = listImc;
		this.listRiesgoDm2 = listRiesgoDm2;
	}

	public List<Double> getListRiesgoHTA() {
		return listRiesgoHTA;
	}

	public void setListRiesgoHTA(List<Double> listRiesgoHTA) {
		this.listRiesgoHTA = listRiesgoHTA;
	}

	public List<Double> getListEdad() {
		return listEdad;
	}

	public void setListEdad(List<Double> listEdad) {
		this.listEdad = listEdad;
	}

	public List<Double> getListPeso() {
		return listPeso;
	}

	public void setListPeso(List<Double> listPeso) {
		this.listPeso = listPeso;
	}

	public List<Double> getListPal() {
		return listPal;
	}

	public void setListPal(List<Double> listPal) {
		this.listPal = listPal;
	}

	public List<Double> getListImc() {
		return listImc;
	}

	public void setListImc(List<Double> listImc) {
		this.listImc = listImc;
	}

	public List<Double> getListRiesgoDm2() {
		return listRiesgoDm2;
	}

	public void setListRiesgoDm2(List<Double> listRiesgoDm2) {
		this.listRiesgoDm2 = listRiesgoDm2;
	}

	////////////// Multiplicador
	////////////// diasistolico/////////////////////////////////////////////
	public double multDiasistolico(double value) {
		double resultado = 0;

		double[] y = { -49.98, -47.48283, -45.81805, -44.98566, -44.15327, -44.15327, -43.59834, -43.04341, -42.48849,
				-41.93356, -41.10117, -40.26878, -39.71385, -38.88146, -38.04907, -37.49415, -37.21668, -36.38429,
				-35.5519, -34.99698, -34.71951, -34.16459, -33.60966, -32.77727, -32.22234, -31.66741, -30.55756,
				-30.00263, -28.89278, -27.93902, -27.66351, -26.56146, -26.01044, -25.45941, -24.63288, -23.80634,
				-22.9798, -22.15327, -21.05122, -19.94917, -18.84712, -18.2961, -17.74507, -17.46956, -17.19405,
				-16.36751, -15.54098, -14.71444, -14.16341, -13.8879, -13.06137, -12.78585, -12.23483, -11.40829,
				-10.30624, -9.75522, -9.204195, -8.377659, -7.757152, -6.931024, -6.582732, -6.095122, -5.851317,
				-4.388488, -3.900878, -2.681854, -1.950439, -1.706634, -1.219024, -0.7314146, 0, 0, 0.1, 0.1, 0.5, 0.6,
				0.8, 1, 1.6, 2, 2.1, 2.3, 2.4, 2.5, 2.6, 3, 3.1, 3.5, 3.8, 4, 4.2, 4.6, 4.8, 5, 5.2, 5.3, 5.6, 6, 6.1,
				6.3, 6.7, 6.9, 7, 7.2, 7.2, 7.3, 7.5, 8, 8.5, 8.9, 9.2, 9.5, 9.6, 9.6, 9.7, 9.8, 10, 10.5, 10.6, 11,
				11.5 };

		if (value < -70) {
			resultado = y[0];
		} else {
			if (value > 50) {
				resultado = 11.5;
			} else {
				if (value >= -70 && value <= 50) {
					int aux = (int) Math.abs(value);
					int x0 = aux + 70;
					int x1 = aux + 71;
					double k0 = y[x0];
					double k1 = y[x1];
					double k = (k1 - k0) / (x1 - x0);
					double T = (value + 70) - x0;
					resultado = k0 + (k * T);

				}
			}
		}

		return resultado;
	}

/////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
//////////////Multiplicador sistolico/////////////////////////////////////////////
	public double multSistolico(double value) {
		double resultado = 0;
		double[] y = { -59.69151, -57.34595, -57.34595, -57.01087, -56.3407, -56.00562, -55.00038, -54.6653, -53.66006,
				-52.65482, -51.3145, -50.97942, -49.97417, -49.30401, -48.96893, -47.96369, -46.95845, -46.28829,
				-45.28305, -44.94797, -43.94272, -43.27256, -41.93224, -41.59716, -40.25684, -38.58144, -38.58144,
				-38.58144, -38.24636, -37.57619, -36.57095, -35.90079, -34.56047, -33.89031, -32.88507, -31.87983,
				-30.87458, -29.53426, -26.85362, -26.18346, -25.84838, -24.84313, -23.83789, -23.50281, -22.49757,
				-22.16249, -21.82741, -20.82217, -19.48185, -19.14677, -17.80644, -16.8012, -15.79596, -15.1258,
				-14.12056, -13.11532, -12.44515, -11.77499, -10.48241, -9.900055, -9.608877, -9.317699, -8.735343,
				-7.570631, -6.405918, -4.44, -3, -2, -1, 0, 0, 0.1, 0.1, 0.5, 0.6, 0.8, 1, 1.6, 2, 2.1, 3, 2.4, 2.5,
				3.973792, 4.308872, 4.308872, 4.308872, 4.308872, 4.308872, 4.643953, 5.314114, 5.314114, 6.319356,
				6.319356, 6.319356, 6.319356, 7.324597, 7.994758, 7.994758, 8.664919, 9, 9.1, 9.2, 9.3, 9.5, 9.5,
				10.25143, 10.60114, 10, 11, 12, 12.2, 12.2, 12.3, 13.5426, 14.2713, 14.2713, 14.2713, 14.2713, 14.2713,
				15, 15.2, 15.3, 15.6, 16.7, 16.9, 17, 17.2, 17.3, 17.4, 18 };

		if (value < -70) {
			resultado = y[0];
		} else {
			if (value > 60) {
				resultado = 18;
			} else {
				if (value >= -70 && value <= 60) {
					int aux = (int) Math.abs(value);
					int x0 = aux + 70;
					int x1 = aux + 71;
					double k0 = y[x0];
					double k1 = y[x1];
					double k = (k1 - k0) / (x1 - x0);
					double T = (value + 70) - x0;
					resultado = k0 + (k * T);
				}
			}
		}

		return resultado;
	}

///////////////////////////////////////////////////////////////////////////
///////////////////////multiplicador pa_H//////////////////////////////////
	public double multPesoEdadH(double value) {
		double resultado = 0;
		double[] y = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
				0.001, 0.001, 0.001, 0.001, 0.001, 0.002, 0.002, 0.002403902, 0.002403902, 0.002, 0.002, 0.00270439,
				0.00270439, 0.003004878, 0.003004878, 0.003, 0.003004878, 0.003, 0.003305366, 0.003305366, 0.003,
				0.003305366, 0.003305366, 0.003305366, 0.004507317, 0.004, 0.004507317, 0.004507317, 0.004507317,
				0.004507317, 0.004, 0.004507317, 0.005108293, 0.00540878, 0.0054, 0.0056, 0.005709268, 0.006009756,
				0.006009756, 0.006310244, 0.0064, 0.006610732, 0.006610732, 0.006610732, 0.007211707, 0.00721,
				0.007211707, 0.007211707, 0.007211707, 0.007812683, 0.0078, 0.007812683, 0.007812683, 0.008113171,
				0.008, 0.007812683, 0.008113171, 0.008413659, 0.008714146, 0.008, 0.009014634, 0.009315122, 0.00961561,
				0.009916098, 0.009, 0.01051707, 0.01081756, 0.01141854, 0.01171902, 0.011, 0.01171902, 0.01232, 0.01232,
				0.01262049, 0.012, 0.01322146, 0.01322146, 0.01382244, 0.01412293, 0.014, 0.01412293, 0.0147239,
				0.0147239, 0.01502439, 0.015, 0.01592585, 0.01622634, 0.01652683, 0.01682732, 0.016, 0.0171278,
				0.01772878, 0.01802927, 0.01832976, 0.018, 0.01863024, 0.01923122, 0.01923122, 0.0198322, 0.019,
				0.02013268, 0.02013268, 0.02043317, 0.02073366, 0.020, 0.02103415, 0.02133463, 0.02193561, 0.02193561,
				0.021, 0.0222361, 0.02253659, 0.02253659, 0.02433951, 0.024, 0.02313756, 0.02343805, 0.02403902,
				0.02433951, 0.024, 0.02464, 0.02524098, 0.02554146, 0.02584195, 0.025, 0.02644293, 0.02674341,
				0.02734439, 0.027, 0.02764488, 0.02794537, 0.02824585, 0.02914732, 0.029, 0.03004878, 0.03064976,
				0.03125073, 0.03155122, 0.031, 0.03185171, 0.03245268, 0.03335415, 0.03365463, 0.033, 0.03395512,
				0.0345561, 0.03485659, 0.03545756, 0.035, 0.03575805, 0.03635902, 0.03665951, 0.03696, 0.036,
				0.03726049, 0.03756098, 0.03786146, 0.03816195, 0.038, 0.03816195, 0.03846244, 0.03876293, 0.03876293,
				0.038, 0.03966439, 0.03996488, 0.04056585, 0.04146732, 0.041, 0.0417678, 0.0417678, 0.04206829,
				0.04236878, 0.042, 0.04266927, 0.04266927, 0.04327024, 0.04327024, 0.043, 0.04327024, 0.04357073,
				0.04387122, 0.04417171, 0.044, 0.04417171, 0.04417171, 0.04477268, 0.04477268, 0.044, 0.04507317,
				0.04567415, 0.04597463, 0.04627512, 0.046, 0.0468761, 0.04717659, 0.04747707, 0.047, 0.04777756,
				0.04807805, 0.04867902, 0.04928, 0.049, 0.04958049, 0.04988098, 0.05018146, 0.05018146, 0.050,
				0.05018146, 0.05048195, 0.05048195, 0.05108293, 0.051, 0.05138341, 0.0516839, 0.05228488, 0.05228488,
				0.052, 0.05288585, 0.05288585, 0.05288585, 0.05288585, 0.052, 0.05288585, 0.05288585, 0.05348683,
				0.05378732, 0.053, 0.05378732, 0.0540878, 0.05438829, 0.05468878, 0.054, 0.05468878, 0.054, 0.05498927,
				0.05559024, 0.055, 0.05589073, 0.05589073, 0.05589073, 0.05619122, 0.056, 0.05649171, 0.05649171, 0.056,
				0.0567922, 0.056, 0.0567922, 0.0567922, 0.05709268, 0.05709268, 0.057, 0.05739317, 0.05739317,
				0.05769366, 0.05769366, 0.057, 0.05769366, 0.05799415, 0.05799415, 0.05829463, 0.058, 0.05859512,
				0.05859512, 0.05859512, 0.0591961, 0.060, 0.05949659, 0.05949659, 0.05979707, 0.060, 0.060, 0.06009756,
				0.06039805, 0.060, 0.060, 0.06069854, 0.060, 0.06069854, 0.06069854, 0.060, 0.06069854, 0.06069854,
				0.06069854, 0.06069854, 0.060, 0.060, 0.06069854, 0.06069854, 0.06069854, 0.060, 0.06069854, 0.06069854,
				0.06069854, 0.06099902, 0.060, 0.06099902, 0.06099902, 0.06099902, 0.06099902, 0.060, 0.060, 0.06129951,
				0.060, 0.06129951, 0.060, 0.06129951, 0.0616, 0.0616, 0.0616, 0.0610, 0.0616, 0.0616, 0.0616, 0.0616,
				0.0610, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616,
				0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616, 0.0616,
				0.0616, 0.0616, 0.0616, 0.0616, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617,
				0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.0617, 0.06178439, 0.06175862, 0.0617,
				0.06175862, 0.06175862, 0.06175862, 0.0617, 0.06178505, 0.06178505, 0.06181149, 0.06181149, 0.0618,
				0.06183792, 0.06183792, 0.06183792, 0.0618, 0.06186436, 0.06189079, 0.06189079, 0.06189079, 0.06189,
				0.06191723, 0.06191723, 0.06194367, 0.061943, 0.06194367, 0.06194367, 0.06194367, 0.0619701, 0.0619701,
				0.06199654, 0.06199654, 0.06202297, 0.0620229, 0.06202297, 0.06202297, 0.06204941, 0.06204941, 0.062049,
				0.06207585, 0.06207585, 0.06210228, 0.06212872, 0.062128, 0.06215515, 0.06215515, 0.06218159, 0.062208,
				0.06220802, 0.06223446, 0.0622609, 0.0622609, 0.062287, 0.0622609, 0.06228733, 0.0623402, 0.062234,
				0.0623402, 0.06236664, 0.06236664, 0.06239308, 0.062445, 0.06244595, 0.06247238, 0.06247238, 0.062525,
				0.06255169, 0.06255169, 0.06260456, 0.06260456, 0.062604, 0.06260456, 0.062631, 0.06273674, 0.06278961,
				0.0628, 0.06284249, 0.06292179, 0.06294823, 0.0630, 0.0630011, 0.06305397, 0.06310684, 0.06313328,
				0.06318, 0.06318615, 0.06323902, 0.06326546, 0.063265, 0.06329189, 0.06331833, 0.06334477, 0.0633712,
				0.063371, 0.06339764, 0.06345051, 0.06350338, 0.0635033, 0.06358269, 0.06360912, 0.063662, 0.06368843,
				0.063688, 0.06376774, 0.06379418, 0.06382061, 0.063820, 0.06387348, 0.06389992, 0.06395279, 0.06397923,
				0.06420, 0.0640321, 0.06408497, 0.06411141, 0.06434933, 0.0643, 0.06437576, 0.0644022, 0.06445507,
				0.0644, 0.06448151, 0.06456082, 0.06456082, 0.06461369, 0.06462, 0.06469299, 0.06474587, 0.0647723,
				0.0647, 0.06479874, 0.06485161, 0.06490448, 0.06493092, 0.06491, 0.06498379, 0.06501023, 0.0650631,
				0.0651, 0.06508953, 0.0651424, 0.06519528, 0.06522171, 0.065221, 0.06527458, 0.06530102, 0.06532746,
				0.06538033, 0.065380, 0.0654332, 0.0654332, 0.06548607, 0.0654, 0.06553894, 0.06556538, 0.06556538,
				0.06559181, 0.06559, 0.06564469, 0.06567112, 0.06569756, 0.065697, 0.06572399, 0.06575043, 0.0658033,
				0.06582974, 0.06582, 0.06585617, 0.06588261, 0.06582974, 0.065829, 0.06588261, 0.06588261, 0.06590904,
				0.06593548, 0.065935, 0.06596192, 0.06598835, 0.06598835, 0.065988, 0.06601479, 0.06604122, 0.06606766,
				0.0660941, 0.06609, 0.0660941, 0.06612053, 0.06612053, 0.06614697, 0.06614, 0.06614697, 0.06614697,
				0.0661734, 0.0661734, 0.06619984, 0.06619984, 0.06622627, 0.06622627, 0.066226, 0.06622627, 0.06622627,
				0.06625271, 0.06625, 0.06627915, 0.06630558, 0.06630558, 0.06633202, 0.06626244, 0.06633202, 0.06635845,
				0.06635845, 0.066358, 0.06635845, 0.06638489, 0.06641133, 0.06641133, 0.0663414, 0.06643776, 0.0664642,
				0.0664642, 0.0664642, 0.066464, 0.06649063, 0.06649063, 0.06651707, 0.0664468, 0.0665435, 0.0665435,
				0.06656994, 0.06656994, 0.06657, 0.06656994, 0.06659638, 0.06659638, 0.06647, 0.06662281, 0.06662281,
				0.06664925, 0.06664925, 0.0666, 0.06664925, 0.06667568, 0.06667568, 0.06664, 0.06670212, 0.06670212,
				0.06672856, 0.06672856, 0.0667, 0.06672856, 0.06675499, 0.06675499, 0.0667, 0.06675499, 0.06678143,
				0.06680786, 0.06680786, 0.06673, 0.0668343, 0.0668343, 0.0668343, 0.06686073, 0.066788, 0.06686073,
				0.06686073, 0.06691361, 0.06684, 0.06691361, 0.06691361, 0.06691361, 0.06691361, 0.06691, 0.06694004,
				0.06694004, 0.06694004, 0.06694, 0.06694004, 0.06694004, 0.06696648, 0.06696648, 0.067, 0.06696648,
				0.06699291, 0.06699291, 0.067, 0.06696648, 0.06696648, 0.06696648, 0.06696648, 0.067, 0.06696648,
				0.06696648, 0.06696648, 0.06696648, 0.067, 0.06696648, 0.06699291, 0.06699291, 0.067, 0.06699291,
				0.06699291, 0.06701935, 0.06701935, 0.067, 0.06696413, 0.06696413, 0.06699108, 0.067, 0.06699108,
				0.06699108, 0.06699108, 0.06699108, 0.067, 0.06699279, 0.06699279, 0.06699279, 0.067, 0.06699279,
				0.06699279, 0.06699279, 0.06699279, 0.067, 0.06699279, 0.06699279, 0.06699279, 0.067, 0.06699279,
				0.06699291, 0.06699291, 0.06699291, 0.067, 0.06701935, 0.06701935, 0.06701935, 0.067, 0.067, 0.067,
				0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067, 0.068,
				0.068, 0.068, 0.068, 0.068, 0.068, 0.068, 0.068, 0.068, 0.068, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069,
				0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069,
				0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069,
				0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.069, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070,
				0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070, 0.070,
				0.070, 0.070, 0.070, 0.070, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071,
				0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071,
				0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071,
				0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071,
				0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072,
				0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072,
				0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072,
				0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.072, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073,
				0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073,
				0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073,
				0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073,
				0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073,
				0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731,
				0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0731, 0.0732, 0.0732,
				0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732,
				0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0732, 0.0733, 0.0733, 0.0733, 0.0733, 0.0733, 0.0733,
				0.0733, 0.0733, 0.0733, 0.0735, 0.0735, 0.0735, 0.0735, 0.0735, 0.0735, 0.0735, 0.0735, 0.0735, 0.0735,
				0.0736, 0.0736, 0.0736, 0.0736, 0.0736, 0.0736, 0.0736, 0.0736, 0.0736, 0.0736, 0.0737, 0.0737, 0.0737,
				0.0737, 0.0737, 0.0737, 0.0737, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739,
				0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739,
				0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0739, 0.0740, 0.0740, 0.0740, 0.0740, 0.0740, 0.0740, 0.0740,
				0.0740, 0.0740, 0.0740, 0.0740, 0.0740, 0.0740, 0.0740, 0.0740361, 0.0740361, 0.07408146, 0.07408146,
				0.07408, 0.07408146, 0.07408146, 0.07408146, 0.0741, 0.07412683, 0.07412683, 0.07412683, 0.0741722,
				0.07417, 0.0741722, 0.07421756, 0.07421756, 0.0741, 0.07421756, 0.07421756, 0.07421756, 0.07421756,
				0.074217, 0.07421756, 0.07440214, 0.07440214, 0.074402, 0.07440214, 0.07440214, 0.07444778, 0.07444778,
				0.0744477, 0.07444778, 0.07449343, 0.07453908, 0.07453908, 0.07453908, 0.07453908, 0.07458473,
				0.07458473, 0.074584, 0.07463038, 0.07463038, 0.07467603, 0.07472168, 0.0747, 0.07472168, 0.07472168,
				0.07476733, 0.074767, 0.07481297, 0.07485862, 0.07485862, 0.07494992, 0.07494, 0.07499557, 0.07504122,
				0.07504122, 0.075041, 0.07508687, 0.07513252, 0.07517816, 0.07522381, 0.07522, 0.07522381, 0.07526946,
				0.07531511, 0.07531, 0.07536076, 0.07536076, 0.07540641, 0.07540641, 0.07540, 0.07549771, 0.07549771,
				0.07554335, 0.075589, 0.075589, 0.0756803, 0.0756803, 0.07572595, 0.0757, 0.0757716, 0.07581725,
				0.0758629, 0.07590854, 0.07590, 0.07595419, 0.07595419, 0.07599984, 0.075999, 0.07604549, 0.07609114,
				0.07613679, 0.07613679, 0.076136, 0.07622809, 0.07627373, 0.07631938, 0.076319, 0.07631938, 0.07636503,
				0.07645633, 0.07650198, 0.07650, 0.07654763, 0.07654763, 0.07663892, 0.07663, 0.07668457, 0.07673022,
				0.07677587, 0.07682152, 0.0769, 0.07691282, 0.07695847, 0.07700411, 0.07704976, 0.077049, 0.07714106,
				0.07718671, 0.07723236, 0.0772323, 0.07727801, 0.07741495, 0.07750625, 0.0775519, 0.0775519, 0.0776432,
				0.07768884, 0.07778014, 0.077780, 0.07782579, 0.07791709, 0.07800839, 0.07809968, 0.078099, 0.07814533,
				0.07823663, 0.07832793, 0.078327, 0.07841922, 0.07851052, 0.07855617, 0.07864747, 0.078647, 0.07873877,
				0.07887571, 0.07892136, 0.07896701, 0.07896, 0.07905831, 0.0791496, 0.07919525, 0.07919, 0.07928655,
				0.0793322, 0.0794235, 0.07946782, 0.07946, 0.07960473, 0.07969601, 0.07983292, 0.07983, 0.0799242,
				0.08001547, 0.08001547, 0.08006111, 0.0800611, 0.08010675, 0.08019802, 0.08019802, 0.080198, 0.08024366,
				0.0802893, 0.08033494, 0.08038058, 0.08038, 0.08042621, 0.08042621, 0.08047185, 0.0804718, 0.08056313,
				0.08056313, 0.08060876, 0.0806544, 0.08074, 0.08079296, 0.08083861, 0.08088426, 0.08097555, 0.08097,
				0.0810212, 0.08106685, 0.08115815, 0.08115, 0.08115815, 0.0812038, 0.08124945, 0.08129509, 0.081295,
				0.08134074, 0.08134074, 0.08138639, 0.08138, 0.08143204, 0.08143204, 0.08152334, 0.08156899, 0.08156,
				0.08156899, 0.08161464, 0.08166028, 0.08166, 0.08170593, 0.08179723, 0.08179723, 0.08188853, 0.08188,
				0.08197983, 0.08207112, 0.08211677, 0.08216242, 0.08221, 0.08220807, 0.08225372, 0.08229937, 0.082299,
				0.08229937, 0.08234502, 0.08234502, 0.08239066, 0.0823, 0.08239066, 0.08243631, 0.08243631, 0.08243,
				0.08243631, 0.08243631, 0.08248196, 0.08248196, 0.0824819, 0.08252761, 0.08252761, 0.08252761, 0.08252,
				0.08261683, 0.08261683, 0.08270811, 0.08270811, 0.0827, 0.08270811, 0.08275374, 0.08275374, 0.08271,
				0.08279938, 0.08279938, 0.08279938, 0.08284502, 0.0828, 0.08289066, 0.0828928, 0.0828928, 0.08293845,
				0.083, 0.08293845, 0.08293845, 0.08293845, 0.083, 0.0829841, 0.08302975, 0.08302975, 0.08302975, 0.083,
				0.0830754, 0.0830754, 0.0830754, 0.0831, 0.08312104, 0.08312104, 0.08312104, 0.08312104, 0.0831,
				0.08312104, 0.08316669, 0.08316669, 0.0831, 0.08321012, 0.08316448, 0.08316448, 0.08316448, 0.0832,
				0.0832099, 0.0832099, 0.0832099, 0.08316404, 0.0832, 0.08316404, 0.08320968, 0.08320968, 0.0832,
				0.08320968, 0.08320968, 0.08320968, 0.08320968, 0.0832, 0.08320968, 0.08316359, 0.08316359, 0.0832,
				0.08316359, 0.08316359, 0.08316359, 0.08316359, 0.0832, 0.08316359, 0.08316359, 0.08316359, 0.0832,
				0.08316359, 0.08316359, 0.08316359, 0.08320968, 0.0832, 0.08320968, 0.08320968, 0.08320968, 0.0832,
				0.08325576, 0.08325576, 0.08325576, 0.08325576, 0.0832, 0.08325576, 0.08325576, 0.08320441, 0.08320441,
				0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832, 0.0832,
				0.0832, 0.0834, 0.0834, 0.0834, 0.0834, 0.0834, 0.0834, 0.08351557, 0.08351557, 0.08351557, 0.0835,
				0.08351557, 0.08351557, 0.08356816, 0.08351557, 0.0835, 0.08356816, 0.08356816, 0.08362075, 0.08362075,
				0.0836, 0.08367335, 0.08367335, 0.08372594, 0.0837, 0.08372594, 0.08377854, 0.08383113, 0.08383113,
				0.0838, 0.08383113, 0.08388373, 0.08393632, 0.08390, 0.08393632, 0.08398891, 0.08398891, 0.08408732,
				0.0840, 0.08413951, 0.08413951, 0.0842439, 0.0844, 0.0842439, 0.0842439, 0.0842439, 0.0842961, 0.0843,
				0.0842961, 0.0842961, 0.08434829, 0.0844, 0.08440049, 0.08440049, 0.08440049, 0.08445268, 0.0845,
				0.08445268, 0.08450488, 0.08460927, 0.08460927, 0.0846, 0.08460927, 0.08466146, 0.08471366, 0.0847,
				0.08471366, 0.08481805, 0.08481805, 0.08481805, 0.0847, 0.08481805, 0.08481805, 0.08487024, 0.0848,
				0.08492244, 0.08492244, 0.08497463, 0.08502683, 0.0849, 0.08502683, 0.08507902, 0.08507902, 0.0850,
				0.08513122, 0.08518341, 0.08523561, 0.0852878, 0.0853, 0.0852878, 0.08534, 0.0853922, 0.0853922, 0.0855,
				0.08549659, 0.08554878, 0.08560098, 0.0856, 0.08560098, 0.08565317, 0.08570537, 0.08575756, 0.08577,
				0.08575756, 0.08580976, 0.08580976, 0.08588, 0.08588231, 0.0859349, 0.0859875, 0.0859875, 0.08598,
				0.08604009, 0.08607073, 0.08607073, 0.08607, 0.08607073, 0.08607073, 0.08612293, 0.08612293, 0.08619,
				0.08617512, 0.08617512, 0.08622732, 0.0862, 0.08622732, 0.08622732, 0.08627951, 0.08633171, 0.0864,
				0.0863839, 0.0863839, 0.0864361, 0.08648829, 0.0865, 0.08654049, 0.08654049, 0.08659268, 0.0865,
				0.08659268, 0.08664488, 0.08669707, 0.08674927, 0.08667, 0.08680146, 0.08685366, 0.08685366, 0.08677,
				0.08690585, 0.08690585, 0.08693419, 0.08698679, 0.086986, 0.08709198, 0.08714457, 0.08719717, 0.08719,
				0.08724976, 0.08730235, 0.08730235, 0.08735495, 0.08735, 0.08740754, 0.08751273, 0.08751273, 0.08756533,
				0.08756, 0.08761792, 0.08767051, 0.08772311, 0.08777, 0.08784537, 0.08789756, 0.08794976, 0.08800195,
				0.08782, 0.08805415, 0.08805415, 0.08810634, 0.0880, 0.08821073, 0.08826293, 0.08831512, 0.08831512,
				0.088, 0.08841951, 0.0885239, 0.0885761, 0.08856, 0.08862829, 0.0887224, 0.088775, 0.08888018, 0.08888,
				0.08893278, 0.08898537, 0.08909056, 0.08909, 0.08914316, 0.08919575, 0.08930094, 0.08935353, 0.08935,
				0.08945872, 0.08945872, 0.08956391, 0.0896165, 0.089616, 0.08972169, 0.08972169, 0.08982688, 0.089826,
				0.08993207, 0.08998466, 0.08998466, 0.09003726, 0.090037, 0.09014245, 0.09019504, 0.09024764, 0.09025,
				0.09030023, 0.09040542, 0.09045801, 0.09051061, 0.09051, 0.0905632, 0.09066839, 0.09072098, 0.09070,
				0.09077358, 0.09082617, 0.09093136, 0.09098396, 0.09098, 0.09103655, 0.09114174, 0.09119433, 0.09124693,
				0.0912, 0.09135212, 0.09140471, 0.0914573, 0.09145, 0.0915099, 0.09156249, 0.09161509, 0.09172028,
				0.09172, 0.09177287, 0.09182546, 0.09187806, 0.091878, 0.09198325, 0.09208844, 0.09208844, 0.09219362,
				0.09219, 0.09224622, 0.09229881, 0.092404, 0.09240, 0.092404, 0.0924566, 0.0924566, 0.0924566, 0.09245,
				0.09250919, 0.09250919, 0.09256178, 0.09256, 0.09261438, 0.09261438, 0.09266697, 0.09271957, 0.09271,
				0.09271957, 0.09271957, 0.09277216, 0.09277216, 0.09277126, 0.09282476, 0.09287735, 0.09287735,
				0.092877, 0.09292994, 0.09298254, 0.09298254, 0.09298254, 0.09298, 0.09303513, 0.09308773, 0.09308773,
				0.0930877, 0.09308773, 0.09319292, 0.09319292, 0.09324551, 0.0932455, 0.0932981, 0.0932981, 0.0933507,
				0.09335, 0.09340329, 0.09340329, 0.09345589, 0.09345589, 0.09345589, 0.09350848, 0.09356108, 0.09361367,
				0.09361367, 0.0936136, 0.09363902, 0.09363902, 0.09369122, 0.0937188, 0.09369122, 0.09369122,
				0.09369122, 0.09369122, 0.09377145, 0.09369122, 0.09374341, 0.09374341, 0.09371706, 0.09374341,
				0.09374341, 0.09374341, 0.09374341, 0.09377145, 0.09374341, 0.09379561, 0.09382126, 0.093824,
				0.09382126, 0.09382126, 0.09382126, 0.09382126, 0.093824, 0.09382126, 0.09382126, 0.09382126, 0.09382,
				0.09382126, 0.09382126, 0.09382126, 0.09382126, 0.09382, 0.09382126, 0.0939, 0.0939, 0.0939, 0.0939,
				0.0939, 0.0939, 0.0939, 0.0939, 0.0939, 0.0939 };

		if (value < 0) {
			resultado = y[0];
		} else {
			if (value > 1824) {
				resultado = 0.0939;
			} else {
				if (value >= 0 && value <= 1824) {
					int aux = (int) Math.abs(value);
					int x0 = aux;
					int x1 = aux + 1;
					double k0 = y[x0];
					double k1 = y[x1];
					double k = (k1 - k0) / (x1 - x0);
					double T = (value) - x0;
					resultado = k0 + (k * T);
				}
			}
		}

		return resultado;
	}

///////////////////////////////////////////////////////////////////////////
///////////////////////multiplicador pa_M//////////////////////////////////
	public double multPesoEdadM(double value) {
		double resultado = 0;
		double[] y = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0007960976, 0.001194146, 0.001194146,
				0.00119, 0.001194146, 0.001194146, 0.001592195, 0.001592195, 0.0015921, 0.001592195, 0.001592195,
				0.001592195, 0.001990244, 0.00199, 0.001990244, 0.001990244, 0.001990244, 0.001990244, 0.002,
				0.002388293, 0.002388293, 0.002786341, 0.002786341, 0.002786, 0.002786341, 0.002786341, 0.002786341,
				0.00318439, 0.003184, 0.00318439, 0.00318439, 0.00318439, 0.003582439, 0.0035824, 0.003582439,
				0.003582439, 0.003582439, 0.004776585, 0.00477, 0.004776585, 0.004776585, 0.004776585, 0.004776585,
				0.0047765, 0.004776585, 0.004776585, 0.005174634, 0.005174634, 0.0053, 0.005572683, 0.005970732,
				0.005970732, 0.00636878, 0.006368, 0.006766829, 0.006766829, 0.006766829, 0.006766, 0.007164878,
				0.007562927, 0.007960976, 0.008359024, 0.00835, 0.008757073, 0.008757073, 0.008757073, 0.008757073,
				0.00875, 0.009155122, 0.009155122, 0.00995122, 0.01233951, 0.0123, 0.01074732, 0.01114537, 0.01194146,
				0.01194146, 0.01194, 0.01194146, 0.01273756, 0.0147278, 0.01353366, 0.013533, 0.01393171, 0.0147278,
				0.01512585, 0.0155239, 0.0155, 0.01632, 0.01671805, 0.01671805, 0.0171161, 0.017, 0.01751415,
				0.01831024, 0.01831024, 0.01870829, 0.0187, 0.01910634, 0.01950439, 0.01990244, 0.02030049, 0.02,
				0.02109659, 0.02109659, 0.02189268, 0.02229073, 0.0222, 0.02308683, 0.02348488, 0.02388293, 0.02388293,
				0.02388, 0.02467902, 0.02507707, 0.02547512, 0.02587317, 0.02587, 0.02627122, 0.02666927, 0.02746537,
				0.02786341, 0.02786, 0.02826146, 0.02905756, 0.02985366, 0.03025171, 0.03025, 0.0310478, 0.03144585,
				0.03224195, 0.03224, 0.03264, 0.03303805, 0.0342322, 0.03463024, 0.03463, 0.03502829, 0.03542634,
				0.03622244, 0.03662049, 0.0366, 0.03701854, 0.03741659, 0.03781463, 0.03821268, 0.038, 0.03861073,
				0.03900878, 0.03940683, 0.03980488, 0.039, 0.04020293, 0.04060098, 0.04139707, 0.04179512, 0.04179,
				0.04259122, 0.04338732, 0.04458146, 0.04497951, 0.04497, 0.04617366, 0.04657171, 0.04776585, 0.0481639,
				0.04816, 0.0481639, 0.04896, 0.04935805, 0.05015415, 0.05015, 0.0505522, 0.0505522, 0.05134829,
				0.05214439, 0.052144, 0.05294049, 0.05294049, 0.05373659, 0.05453268, 0.05453, 0.05532878, 0.05572683,
				0.05652293, 0.05692098, 0.0569, 0.05771707, 0.05811512, 0.05851317, 0.05891122, 0.058911, 0.05970732,
				0.06010537, 0.06050341, 0.06090146, 0.06090, 0.06090146, 0.06129951, 0.06169756, 0.06169, 0.06209561,
				0.06209561, 0.06289171, 0.06289171, 0.06289, 0.06328976, 0.0636878, 0.06408585, 0.06408585, 0.064085,
				0.0644839, 0.06488195, 0.06528, 0.06528, 0.06528, 0.06567805, 0.0660761, 0.0660761, 0.0668722, 0.06687,
				0.0668722, 0.06727024, 0.06766829, 0.06846439, 0.068464, 0.06846439, 0.06926049, 0.06965854, 0.07005659,
				0.070056, 0.07045463, 0.07045463, 0.07085268, 0.07164878, 0.07164, 0.07164878, 0.07204683, 0.07204683,
				0.07244488, 0.072444, 0.07244488, 0.07284293, 0.07324098, 0.07324098, 0.073240, 0.07363902, 0.07363902,
				0.07363902, 0.07403707, 0.07403, 0.07443512, 0.07443512, 0.07443512, 0.07483317, 0.075, 0.07523122,
				0.07523122, 0.07562927, 0.07562927, 0.07562, 0.07602732, 0.07602732, 0.07602732, 0.07642537, 0.0764,
				0.07682341, 0.07682341, 0.07682341, 0.07722146, 0.07722, 0.07722146, 0.07722146, 0.07722146, 0.07722,
				0.07761951, 0.07761951, 0.07801756, 0.07801756, 0.0780, 0.07841561, 0.07841561, 0.07841561, 0.07841561,
				0.07805, 0.07841561, 0.07841561, 0.07841561, 0.07881366, 0.07805, 0.07881366, 0.07881366, 0.07881366,
				0.07881366, 0.07805, 0.07881366, 0.07921171, 0.07921171, 0.07921171, 0.079059, 0.07921171, 0.079816,
				0.07921171, 0.07921171, 0.08059, 0.07921171, 0.07921171, 0.07921171, 0.08038833, 0.08059, 0.08038833,
				0.08038833, 0.08079027, 0.08079027, 0.081, 0.08079027, 0.0808039, 0.08079027, 0.08120195, 0.081,
				0.08079027, 0.08079027, 0.08120195, 0.08119222, 0.081, 0.08119222, 0.08159416, 0.081, 0.081, 0.081,
				0.081, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816,
				0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0816, 0.0817, 0.0817, 0.0817, 0.0817, 0.0817, 0.0817, 0.0817,
				0.0817, 0.0817, 0.0817, 0.0817561, 0.0817561, 0.0817561, 0.08183415, 0.08183, 0.08183415, 0.0819122,
				0.0819122, 0.0819122, 0.08191, 0.0819122, 0.0819122, 0.08199024, 0.081990, 0.08199024, 0.08199024,
				0.08199024, 0.08199024, 0.0819902, 0.08206829, 0.08206829, 0.08206829, 0.082068, 0.08214634, 0.08214634,
				0.08222439, 0.08222439, 0.08222, 0.08222439, 0.08230244, 0.08238049, 0.082380, 0.08245854, 0.08245854,
				0.08245854, 0.08245854, 0.08245854, 0.08245854, 0.08253659, 0.08253659, 0.0825365, 0.08261463,
				0.08261463, 0.08261463, 0.08269268, 0.08269268, 0.08269268, 0.08277073, 0.08277073, 0.08284878,
				0.08284878, 0.08284878, 0.08292683, 0.08292683, 0.0829268, 0.08292683, 0.08300488, 0.08308293,
				0.08308293, 0.083082, 0.08316098, 0.08316098, 0.08323902, 0.083239, 0.08323902, 0.08323902, 0.08339512,
				0.08339512, 0.08339, 0.08347317, 0.08347317, 0.08355122, 0.08355, 0.08355122, 0.08362927, 0.08370732,
				0.08370732, 0.083707, 0.08378537, 0.08378537, 0.08378537, 0.08386341, 0.083863, 0.08386341, 0.08386341,
				0.08394146, 0.08394146, 0.08401951, 0.08401951, 0.08409756, 0.08409756, 0.084097, 0.08417561,
				0.08417561, 0.08425366, 0.08425, 0.08425366, 0.08433171, 0.08440976, 0.0844878, 0.08448, 0.0844878,
				0.0844878, 0.0846439, 0.08464, 0.0846439, 0.08472195, 0.0847219, 0.08487805, 0.084878, 0.0849561,
				0.08503415, 0.0851122, 0.0851122, 0.0851122, 0.08519024, 0.08526829, 0.08526829, 0.085268, 0.08534634,
				0.08542439, 0.08550244, 0.08558049, 0.085580, 0.08565854, 0.08573659, 0.08573659, 0.085736, 0.08589268,
				0.08589268, 0.08597073, 0.08604878, 0.086048, 0.08612683, 0.08620488, 0.08628293, 0.08628, 0.08636098,
				0.08636098, 0.08643902, 0.08651707, 0.086517, 0.08659512, 0.08659512, 0.08675122, 0.08675, 0.08690732,
				0.08698537, 0.08706341, 0.08714146, 0.08714, 0.08721951, 0.08737561, 0.08737561, 0.08753171, 0.08753,
				0.0876878, 0.0876878, 0.08776585, 0.087765, 0.08792195, 0.088, 0.08807805, 0.0881561, 0.08815,
				0.08823415, 0.0883122, 0.08839024, 0.08839, 0.08846829, 0.08854634, 0.08862439, 0.08870244, 0.088702,
				0.08885854, 0.08885854, 0.08893659, 0.08893, 0.08901463, 0.08909268, 0.08917073, 0.08924878, 0.089248,
				0.08932683, 0.08932683, 0.08940488, 0.08940488, 0.08948293, 0.08956098, 0.08963902, 0.08971707, 0.08971,
				0.08979512, 0.08995122, 0.09010732, 0.09010732, 0.090107, 0.09026341, 0.09041951, 0.09049756, 0.0904975,
				0.09057561, 0.09073171, 0.09080976, 0.0908878, 0.090887, 0.09096585, 0.0910439, 0.09112195, 0.091121,
				0.09127805, 0.09143415, 0.09143415, 0.0915122, 0.091512, 0.09166829, 0.09166829, 0.09174634, 0.09174,
				0.09182439, 0.09190244, 0.09198049, 0.09213659, 0.0921365, 0.09213659, 0.09229268, 0.09237073,
				0.09244878, 0.09244878, 0.09252683, 0.09268293, 0.09276098, 0.09276098, 0.09276098, 0.09283902,
				0.09299512, 0.09315122, 0.09315122, 0.09330732, 0.09338537, 0.09346341, 0.09346341, 0.09361951,
				0.09369756, 0.09393171, 0.09393171, 0.093931, 0.0940878, 0.0942439, 0.09432195, 0.094321, 0.09432195,
				0.09447805, 0.09463415, 0.0947122, 0.0947122, 0.0947122, 0.09479024, 0.09486829, 0.0948682, 0.09502439,
				0.09502439, 0.09510244, 0.09525854, 0.09525854, 0.09525854, 0.09533659, 0.09541463, 0.09557073,
				0.09557073, 0.09564878, 0.09572683, 0.09580488, 0.09590488, 0.09588293, 0.09596098, 0.09603902,
				0.09603902, 0.09603902, 0.09619512, 0.09627317, 0.09627317, 0.09627317, 0.09635122, 0.09642927,
				0.09658537, 0.09658537, 0.096585, 0.09666341, 0.09666341, 0.09674146, 0.0967416, 0.09674146, 0.09681951,
				0.09689756, 0.09689756, 0.096897, 0.09697561, 0.09697561, 0.09705366, 0.09713171, 0.0971317, 0.09713171,
				0.09713171, 0.09720976, 0.09720976, 0.09720976, 0.0972878, 0.0972878, 0.09736585, 0.097365, 0.0974439,
				0.0974439, 0.09752195, 0.0975219, 0.09752195, 0.09752195, 0.09752195, 0.0976219, 0.097621, 0.0976,
				0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976,
				0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976,
				0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0976, 0.0977, 0.0977,
				0.09770836, 0.09770836, 0.09770836, 0.09770836, 0.09773546, 0.09773546, 0.09773546, 0.09776255,
				0.09776255, 0.09776255, 0.09776255, 0.09776255, 0.09778964, 0.09778964, 0.09778964, 0.09781673,
				0.0978167, 0.09781673, 0.09787091, 0.09787091, 0.09787091, 0.097898, 0.097898, 0.09792509, 0.09795219,
				0.097952, 0.09797928, 0.09800637, 0.09800637, 0.09800637, 0.09803346, 0.09803346, 0.09806055,
				0.09808764, 0.09808, 0.09808764, 0.09811473, 0.09814182, 0.098141, 0.09814182, 0.09816892, 0.09816892,
				0.09819601, 0.098196, 0.0982231, 0.0982231, 0.09825019, 0.09825, 0.09827728, 0.09827728, 0.09830437,
				0.09833146, 0.09833146, 0.09833146, 0.09835855, 0.09838565, 0.09838565, 0.09838, 0.09841274, 0.09843983,
				0.09843983, 0.098439, 0.09846692, 0.09849401, 0.09849401, 0.0985211, 0.0985211, 0.0985211, 0.09854819,
				0.09857528, 0.0985752, 0.09860238, 0.09860238, 0.09862947, 0.09865656, 0.0986565, 0.09868365,
				0.09868365, 0.09871074, 0.09871074, 0.09873783, 0.09876492, 0.09876492, 0.09879201, 0.09879201,
				0.0988191, 0.0988462, 0.0988462, 0.09887329, 0.0988732, 0.09890038, 0.09892747, 0.09895456, 0.09895,
				0.09898165, 0.09900874, 0.09903583, 0.09906293, 0.099062, 0.09909002, 0.09911711, 0.0991442, 0.0991442,
				0.09917129, 0.09919838, 0.09922547, 0.09925256, 0.0992525, 0.09927966, 0.09930675, 0.09933384,
				0.09933384, 0.09936093, 0.09938802, 0.09941511, 0.0994422, 0.0994422, 0.09946929, 0.09949639,
				0.09952348, 0.09952348, 0.09955057, 0.09957766, 0.09963184, 0.09965893, 0.099658, 0.09968602,
				0.09971312, 0.0997673, 0.09979439, 0.09979439, 0.09982148, 0.09984857, 0.09990275, 0.09990275,
				0.09992984, 0.09992984, 0.09998403, 0.1000111, 0.1000111, 0.1000653, 0.1000653, 0.1001195, 0.10011,
				0.1001466, 0.1001737, 0.1002008, 0.1002549, 0.10025, 0.100282, 0.1003362, 0.1003362, 0.1003362,
				0.1003633, 0.1004175, 0.1004717, 0.1004717, 0.1004717, 0.1004988, 0.1005529, 0.10058, 0.1006071,
				0.100607, 0.1006613, 0.1006884, 0.1007155, 0.100715, 0.1007426, 0.1007968, 0.1008239, 0.1008509,
				0.1008509, 0.1009051, 0.1009322, 0.1009593, 0.1009593, 0.1010135, 0.1010677, 0.1010677, 0.1011219,
				0.1011219, 0.1011489, 0.101176, 0.1012031, 0.10120, 0.1012573, 0.1012844, 0.1013829, 0.1013829,
				0.101382, 0.1013829, 0.1013829, 0.1013829, 0.101382, 0.1014098, 0.1014366, 0.1014366, 0.1014902,
				0.1014902, 0.1015439, 0.1015976, 0.1015976, 0.1016512, 0.1016512, 0.101678, 0.101678, 0.1017049,
				0.10170, 0.1017317, 0.1017585, 0.1017854, 0.1017854, 0.1017854, 0.1018122, 0.1018659, 0.1018659,
				0.10185, 0.1019195, 0.1019195, 0.1019732, 0.10197, 0.10197, 0.1020268, 0.1020268, 0.1020805, 0.1020805,
				0.1020805, 0.1021073, 0.1021341, 0.102161, 0.102161, 0.1022146, 0.1022415, 0.1022415, 0.1022951,
				0.1022951, 0.102322, 0.1023756, 0.1023756, 0.1023756, 0.1023488, 0.1023756, 0.1024561, 0.1024829,
				0.1025, 0.1025098, 0.1025098, 0.1025634, 0.1025634, 0.1025634, 0.1025902, 0.1025902, 0.1026171,
				0.1026171, 0.1026171, 0.1026439, 0.1026707, 0.1026707, 0.1026976, 0.1026976, 0.1027244, 0.1027512,
				0.1027512, 0.1027512, 0.1027512, 0.102778, 0.102778, 0.102778, 0.102778, 0.102778, 0.1028317, 0.1028317,
				0.1028317, 0.1028557, 0.1028557, 0.1028557, 0.1028557, 0.1028557, 0.1028828, 0.1028828, 0.1028828,
				0.1029099, 0.1029099, 0.1029099, 0.1029099, 0.1029099, 0.1029099, 0.102937, 0.102937, 0.102937,
				0.102937, 0.102937, 0.1029641, 0.1029641, 0.1029641, 0.1029641, 0.1029641, 0.1029912, 0.1029912,
				0.1029912, 0.1030182, 0.1030182, 0.1030182, 0.1030182, 0.1030182, 0.1030453, 0.1030453, 0.1030453,
				0.1030453, 0.1030453, 0.1030453, 0.1030453, 0.1030453, 0.1030724, 0.1030724, 0.1030724, 0.1030724,
				0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724,
				0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724,
				0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724, 0.1030724,
				0.1030724, 0.1030724, 0.1030993, 0.1030993, 0.1031, 0.1031, 0.1031, 0.1031, 0.1031, 0.1031, 0.1031,
				0.1031, 0.1031, 0.1031, 0.1031, 0.1031, 0.1031, 0.1031, 0.1031, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032,
				0.1032, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032, 0.1032341, 0.1032341,
				0.1032, 0.1032341, 0.1032341, 0.1032341, 0.10323, 0.1033011, 0.1033011, 0.1033682, 0.1033682, 0.1033682,
				0.1033682, 0.1034352, 0.1034352, 0.1034352, 0.1034352, 0.1035023, 0.1035023, 0.1035023, 0.1035023,
				0.1035693, 0.1035693, 0.1035693, 0.1035693, 0.1036364, 0.1036364, 0.1036364, 0.1036364, 0.1036364,
				0.1036364, 0.1038375, 0.1038375, 0.1038034, 0.1038375, 0.1038375, 0.1039046, 0.1039046, 0.1039705,
				0.1039716, 0.1040386, 0.1041057, 0.1041057, 0.1041057, 0.1041727, 0.1042398, 0.1042398, 0.1042386,
				0.1042398, 0.1043068, 0.1043739, 0.1043739, 0.1043398, 0.1043739, 0.1044409, 0.1044409, 0.1044409,
				0.104508, 0.104575, 0.1046421, 0.1047091, 0.104709, 0.1047091, 0.1047762, 0.1049103, 0.1049103,
				0.1049103, 0.1049773, 0.1049773, 0.1050443, 0.1050443, 0.1050443, 0.1051784, 0.1051784, 0.1053125,
				0.1053125, 0.1053125, 0.1054466, 0.1055137, 0.1055137, 0.1055807, 0.1055807, 0.1056478, 0.1057148,
				0.1057148, 0.1057819, 0.1057819, 0.1058489, 0.1058489, 0.1059159, 0.105983, 0.10605, 0.1061171,
				0.1061171, 0.1061171, 0.1061841, 0.1062512, 0.1062512, 0.1063182, 0.1063853, 0.1063853, 0.1064523,
				0.1064523, 0.1064523, 0.1065194, 0.1065864, 0.1065864, 0.1066535, 0.1066535, 0.1067205, 0.1067875,
				0.1067875, 0.1068546, 0.1069216, 0.1070557, 0.1071228, 0.1071228, 0.1072569, 0.1073239, 0.107391,
				0.107391, 0.1075251, 0.1075251, 0.1075921, 0.1076592, 0.1076592, 0.1077262, 0.1078603, 0.1078603,
				0.1078603, 0.1079944, 0.1080614, 0.1081285, 0.1081955, 0.1081955, 0.1082626, 0.1083967, 0.1085978,
				0.1085978, 0.1086648, 0.1087319, 0.1087989, 0.108866, 0.108866, 0.108933, 0.108933, 0.1090671,
				0.1091342, 0.1091342, 0.1092012, 0.1092012, 0.1093353, 0.1093353, 0.1094024, 0.1095364, 0.1096035,
				0.1096705, 0.1096705, 0.1098046, 0.1099387, 0.1100058, 0.1100058, 0.1100728, 0.1102069, 0.110274,
				0.110341, 0.110341, 0.1104751, 0.1106092, 0.1106762, 0.110676, 0.1107433, 0.1108103, 0.1108774,
				0.1110785, 0.1110785, 0.1111456, 0.1112797, 0.1113467, 0.1113467, 0.1114137, 0.1115478, 0.1116149,
				0.111749, 0.111749, 0.1118831, 0.1119501, 0.1120172, 0.1121513, 0.1121513, 0.1122183, 0.1122853,
				0.1124194, 0.1124194, 0.1124865, 0.1125535, 0.1126876, 0.1127547, 0.112754, 0.1128217, 0.1130229,
				0.1130899, 0.1130899, 0.113157, 0.113291, 0.1133581, 0.1134922, 0.1134922, 0.1136263, 0.1136933,
				0.1137604, 0.1137604, 0.1138945, 0.1139615, 0.1140286, 0.1141626, 0.1141626, 0.1142297, 0.1142297,
				0.1143638, 0.1144308, 0.1144308, 0.1144308, 0.1144979, 0.1145649, 0.1145649, 0.114699, 0.114699,
				0.1147661, 0.1148331, 0.1148331, 0.1149002, 0.1149672, 0.1149672, 0.1150, 0.1151293, 0.1151293,
				0.1151961, 0.1152629, 0.1152354, 0.1153298, 0.1153298, 0.1153298, 0.1151683, 0.1153298, 0.1153966,
				0.1153966, 0.1154634, 0.1153024, 0.1155302, 0.1155302, 0.1155302, 0.1154365, 0.1155302, 0.1155036,
				0.1155036, 0.1155706, 0.1155705, 0.1155706, 0.1156377, 0.1157047, 0.1157047, 0.1157047, 0.1157047,
				0.1157718, 0.1157718, 0.1157718, 0.1158388, 0.1158388, 0.1158388, 0.1159059, 0.1159059, 0.1159729,
				0.1159729, 0.1159729, 0.1160, 0.1160399, 0.1160399, 0.1160399, 0.116107, 0.116107, 0.116174, 0.116174,
				0.116174, 0.1162411, 0.1162411, 0.1163081, 0.1163081, 0.1163081, 0.1163081, 0.1163752, 0.1163752,
				0.1163752, 0.1163759, 0.1164422, 0.1165093, 0.1165093, 0.1165093, 0.1165093, 0.1165763, 0.1165995,
				0.1165763, 0.1163763, 0.1165763, 0.1165763, 0.1165763, 0.1165763, 0.1165763, 0.1165763, 0.1165763,
				0.1166434, 0.1165434, 0.1166434, 0.1167104, 0.1167104, 0.1167104, 0.1167104, 0.1167104, 0.1167104,
				0.1167775, 0.1165775, 0.1167775, 0.1167775, 0.1167775, 0.116577, 0.1167775, 0.1167775, 0.116777,
				0.116777, 0.1167775, 0.1167775, 0.1167736, 0.1167736, 0.1167736, 0.1167736, 0.1167736, 0.1167736,
				0.1167736, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168, 0.1168,
				0.1168, 0.1168, 0.1169, 0.1169, 0.1169, 0.1169, 0.1169, 0.1170, 0.1170, 0.1170, 0.1170722, 0.1170722,
				0.1170722, 0.1170, 0.1170722, 0.1171629, 0.1171629, 0.1171629, 0.1170, 0.1171629, 0.1172537, 0.1173444,
				0.1172537, 0.1173444, 0.1173444, 0.1174351, 0.1174351, 0.1174351, 0.1174351, 0.1174351, 0.1175259,
				0.1175259, 0.1175259, 0.1175259, 0.1175259, 0.1176166, 0.1176166, 0.1176166, 0.1176166, 0.1176166,
				0.1176166, 0.1177073, 0.1177073, 0.117798, 0.117798, 0.117798, 0.1178888, 0.1178888, 0.1179795,
				0.1179795, 0.1179795, 0.1180702, 0.1180702, 0.118161, 0.118161, 0.118161, 0.118161, 0.1182517,
				0.1182517, 0.1182517, 0.1183424, 0.1183424, 0.1184332, 0.1184332, 0.1185239, 0.1185239, 0.1186146,
				0.1186146, 0.1186146, 0.1186146, 0.1187054, 0.1187054, 0.1187054, 0.1187961, 0.119159, 0.1192498,
				0.1193405, 0.1190, 0.1193405, 0.1193405, 0.119522, 0.1196127, 0.119522, 0.119522, 0.1197034, 0.1197941,
				0.1197941, 0.1198849, 0.1198849, 0.1199756, 0.1199756, 0.1199756, 0.1201571, 0.1202478, 0.1203385,
				0.1203385, 0.12052, 0.1204293, 0.1206107, 0.1208829, 0.1208829, 0.1209737, 0.1210644, 0.1211551,
				0.1211551, 0.1212459, 0.1213366, 0.1214273, 0.1216088, 0.1216088, 0.1216088, 0.1217902, 0.1217902,
				0.1217902, 0.1219717, 0.1220624, 0.1221532, 0.1221532, 0.1221532, 0.1223346, 0.1224254, 0.1225161,
				0.1225161, 0.1226068, 0.1226976, 0.1227883, 0.122879, 0.122879, 0.1229698, 0.1230605, 0.123242,
				0.123242, 0.123242, 0.1233327, 0.1234234, 0.1235141, 0.1235141, 0.1237863, 0.1238771, 0.1239678,
				0.1241493, 0.12414, 0.12424, 0.1244215, 0.1244215, 0.1244585, 0.1245122, 0.1246029, 0.1247844,
				0.1248751, 0.124875, 0.1248751, 0.1250566, 0.125238, 0.125238, 0.1253288, 0.1255102, 0.1255102,
				0.125601, 0.125601, 0.1257824, 0.1258732, 0.1259639, 0.1260546, 0.1260546, 0.1261454, 0.1262361,
				0.1262361, 0.1262361, 0.1264176, 0.1264176, 0.1265083, 0.126599, 0.126599, 0.1266898, 0.1268712,
				0.126962, 0.126962, 0.1270527, 0.1271434, 0.1273249, 0.1274156, 0.1274156, 0.1275971, 0.1275971,
				0.1277785, 0.1277785, 0.12796, 0.1280507, 0.1281415, 0.1283229, 0.1283229, 0.1285044, 0.1284137,
				0.1285044, 0.1285044, 0.1285951, 0.1287766, 0.128958, 0.1291395, 0.1291395, 0.1291395, 0.129321,
				0.1295024, 0.1295932, 0.1295932, 0.1296839, 0.1297746, 0.1299561, 0.1299561, 0.1300468, 0.1300468,
				0.130319, 0.130319, 0.130319, 0.1305005, 0.1305912, 0.130682, 0.13068, 0.1307727, 0.1308634, 0.1309541,
				0.1310449, 0.1310449, 0.1311356, 0.1311356, 0.1312263, 0.1312263, 0.1313171, 0.1314078, 0.1314985,
				0.1315893, 0.131589, 0.1315893, 0.1317707, 0.1318615, 0.1319522, 0.1319522, 0.1319522, 0.1320429,
				0.1321337, 0.1321337, 0.1322244, 0.1322244, 0.1323151, 0.1324059, 0.1324059, 0.1324966, 0.1324966,
				0.1325873, 0.1325973, 0.1325873, 0.132678, 0.132678, 0.1327688, 0.1327688, 0.1328595, 0.1328595,
				0.1329502, 0.1329502, 0.1329502, 0.133041, 0.1331317, 0.1331317, 0.1331317, 0.1332224, 0.1333132,
				0.1333132, 0.1333132, 0.1334039, 0.1334039, 0.1335854, 0.1335854, 0.1335854, 0.1336761, 0.1336761,
				0.1337668, 0.1338576, 0.1338576, 0.1338576, 0.1339483, 0.134039, 0.134039, 0.1341298, 0.1343112,
				0.1341298, 0.1342205, 0.1342205, 0.1343112, 0.1343112, 0.134402, 0.134402, 0.134402, 0.134402, 0.134402,
				0.1344927, 0.1344927, 0.1344927, 0.1344927, 0.1345834, 0.1345834, 0.1345834, 0.1346741, 0.1347649,
				0.1347649, 0.1347649, 0.1347649, 0.1348556, 0.1348556, 0.1348556, 0.1348556, 0.1348463, 0.1348556,
				0.1348556, 0.1348556, 0.1348556, 0.1349463, 0.1349463, 0.1349463, 0.1350, 0.1350371, 0.1350371,
				0.1351278, 0.1351278, 0.1352185, 0.1350371, 0.1351278, 0.1351278, 0.1351278, 0.1351278, 0.1351278,
				0.1351278, 0.1351278, 0.1352185, 0.1352185, 0.1352185, 0.1352185, 0.1352185, 0.1352185, 0.1353093,
				0.1353093, 0.1352093, 0.1353093, 0.1353093, 0.1353093, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354,
				0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354, 0.1354 };

		if (value < 0) {
			resultado = y[0];
		} else {
			if (value > 1824) {
				resultado = 0.1354;
			} else {
				if (value >= 0 && value <= 1824) {
					int aux = (int) Math.abs(value);
					int x0 = aux;
					int x1 = aux + 1;
					double k0 = y[x0];
					double k1 = y[x1];
					double k = (k1 - k0) / (x1 - x0);
					double T = (value) - x0;
					resultado = k0 + (k * T);
				}
			}
		}

		return resultado;
	}

	/*-----------------------------------------------------------------------------*/
///////////////////////multiplicador Re_H//////////////////////////////////
	public double multRegPesoEdadH(double value) {
		double resultado = 0;
		double[] y = { 1, 1.043317, 1.046244, 1.047707, 1.048585, 1.049756, 1.050634, 1.05122, 1.051805, 1.052098,
				1.05239, 1.052976, 1.053561, 1.053561, 1.053854, 1.054146, 1.054439, 1.054732, 1.055024, 1.055024,
				1.05561, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902,
				1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902,
				1.055902, 1.055902, 1.055902, 1.055902, 1.056195, 1.056195, 1.056195, 1.056488, 1.056488, 1.056488,
				1.056488, 1.056488, 1.05678, 1.057073, 1.057073, 1.057073, 1.057366, 1.057659, 1.057659, 1.057951,
				1.058244, 1.058244, 1.058244, 1.058537, 1.058829, 1.059122, 1.059415, 1.059415, 1.059415, 1.059415,
				1.059415 };
		double aux = value - 20;
		if (value < 0) {
			resultado = y[0];
		} else {
			if (value > 89) {
				resultado = 1.059415;
			} else {
				if (value >= 0 && value <= 89) {
					resultado = y[(int) aux];
				}
			}
		}

		return resultado;
	}

///////////////////////////////////////////////////////////////////////////
///////////////////////multiplicador pa_M//////////////////////////////////
	public double multRegPesoEdadM(double value) {
		double resultado = 0;
		double[] y = { 1, 1.045659, 1.047415, 1.050049, 1.05122, 1.051805, 1.052683, 1.053268, 1.053854, 1.053854,
				1.054146, 1.054439, 1.055024, 1.055024, 1.055317, 1.055317, 1.05561, 1.05561, 1.05561, 1.05561,
				1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902,
				1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902, 1.055902,
				1.055902, 1.055902, 1.055902, 1.055902, 1.056195, 1.056195, 1.056195, 1.056488, 1.056488, 1.05678,
				1.057073, 1.057366, 1.057951, 1.058244, 1.058829, 1.058829, 1.059122, 1.059122, 1.059122, 1.059415,
				1.059415, 1.059415, 1.059682, 1.059682, 1.059682, 1.059682, 1.059682, 1.059682, 1.06, 1.06, 1.06 };
		double aux = value - 20;
		if (value < 0) {
			resultado = y[0];
		} else {
			if (value > 89) {
				resultado = 1.06;
			} else {
				if (value >= 0 && value <= 89) {
					resultado = y[(int) aux];
				}
			}
		}

		return resultado;
	}

///////////////////////////////////////////////////////////////////////////
///////////////////////multiplicador N_H//////////////////////////////////
	public double multN_H(double value) {
		double resultado = 0;
		double[] y = { 1, 1.12, 1.27, 1.54 };

		if (value < 1) {
			resultado = y[0];
		} else {
			if (value >= 4) {
				resultado = 1.54;
			} else {
				if (value >= 1 && value < 4) {
					int aux = (int) Math.abs(value);
					resultado = y[aux];
				}
			}
		}

		return resultado;
	}

///////////////////////////////////////////////////////////////////////////
///////////////////////multiplicador N_M//////////////////////////////////
	public double multN_M(double value) {
		double resultado = 0;
		double[] y = { 1, 1.12, 1.27, 1.54 };

		if (value < 1) {
			resultado = y[0];
		} else {
			if (value >= 4) {
				resultado = 1.54;
			} else {
				if (value >= 1 && value < 4) {
					int aux = (int) Math.abs(value);
					resultado = y[aux];
				}
			}
		}

		return resultado;
	}

	public void calcularRiesgo(int edad, int tiempo, int sexo, double altura, int herencia, int fumar, double calorias,
			double upDownCalorias, int upDown, double peso, int sbp, int dbp, int semanaC, int semanaF, int met1,
			int met2, int met3, int met4, int met5, int t1, int t2, int t3, int t4, int t5, int antecedentesDM2,
			int ali, int niv_glu, int med_HTA, int per_abd) {

		// Declaracion de parametros por sectores
		// Riesgo hta
		int S = sexo;
		double C_Se = -0.202933;
		double C_Ed = -0.156412;
		double C_SBP = -0.059330;
		double C_DBP = -0.128468;
		double C_BMI = -0.033881;
		double Alt = altura;
		double C_ExDBP = 0.001624;
		double C_Her = -0.166121;
		int op_He = herencia;
		int op_cig = fumar;
		double C_cig = -0.190731;
		double Beta = 22.949536;
		double scala = 0.876925;

		// Sector peso
		double Cal_Ex = upDownCalorias;
		int op_CalExt = upDown;
		double EI_d = calorias;
		double PAct = peso;
		int Con_C_Kg = 7700;

		// Presión arteria
		int op_SBP = sbp;
		int op_DBP = dbp;

		// Auxiliares
		// Semanas en la/las que el paciente prevé disminuir/aumentar la ingesta
		// calórica.
		int Mom_d = semanaC;
		// Semanas en el/los que el paciente prevé dejar/comenzar a fumar.
		int Mom_cc = semanaF;
		int Eact = edad;
		int ts = Eact;
		// *********************************************************************//

		// Declaracion de niveles
		// Auxiliares
		double Cont = 1;
		double Ed = Eact;
		double T_tra = ts * 365;
		double T_cig = 0;
		double P_dejaf = 0;

		// Sector peso
		double P = PAct;
		double EI = EI_d;
		double Sub_Cal;
		double Baj_Cal;
		// ********************************************************************//

		// Declaracion de auxiliares para el while
		double a = 1;
		double b = 365;
		double pasoSimu;
		pasoSimu = a / b;

		double tiempoI = Eact;
		double tiempoF = tiempo;
		double aux1 = 1;

		// Declaración de variables auxiliares
		// DM2
		double Riesgo_DM2;
		// AUXILIARES
		double Ed_c;
		double cig_c;
		double Mcc_d = (Mom_cc * 7) + 1;
		double Tempo = Mcc_d;
		// Presion arterial
		double Dif_p;
		// double c_ps;
		// double c_pd;
		double SBP;
		double DBP;
		// cigarrilo
		double P_cig;
		// double Pa_H;
		// double Pa_M;
		// Actividad fisica
		double BEE;
		double P_re;
		double P1;
		double P2;
		double P3;
		double P4;
		double P5;
		double PAL;
		// Sector peso
		double Dec_d;
		double T_com;
		double PA;
		double TEE;
		double EI_ade;
		double EB;
		// double N_H;
		// double N_M;
		double IMC = P / (Alt * Alt);
		// Riesgo HTA
		double Reg_Ed;
		double R_Ed;
		double R_se = C_Se * S;
		double R_Cig;
		double R_Her = op_He * C_Her;
		double R_ExDBP;
		double R_IMC;
		double R_DBP;
		double R_SBP;
		double Ec_HTA;
		double R_HTA;

		double Sum_F;
		//Riesgo DM2
		int Pun_ant;
		int Pun_ali;
		int Pun_act_fis;
		int Pun_niv_glu;
		int Pun_med_HTA;
		int Tabla_per_hom;
		int Tabla_per_muj;
		int Per_Sex;
		int Tabla_edad;
		int Tabla_IMC;
		int Sum_puntos;
		
		
		

		// Declaracion de flujos
		// AUXILIARES

		double F_tt = 365;
		double F_dia;
		double Fs_tempo = 365;
		double F_pdef;
		// Sector peso
		double AC;
		double DC;
		double AP;
		double DP;
		int aux2 = 0; //para contar el numero de iteraciones
		double aux3;
		
		

		while (tiempoI < tiempoF+1) {
			// auxiliares
			if (Mom_d == 0) {
				Ed_c = 10000;
			} else {
				Ed_c = (Eact * 365) + (Mom_d * 7);
			}
			if (Mom_cc == 0) {
				cig_c = 50000;
			} else {
				cig_c = (Eact * 365) + (Mom_cc * 7);
			}
			aux3=(Ed_c/365)-Eact;

			// presion arterial
			Dif_p = P - PAct;

			SBP = multSistolico(Dif_p) + op_SBP;
			DBP = multDiasistolico(Dif_p) + op_DBP;

			// Cigarrillo
			if (T_tra >= cig_c) {
				if (op_cig == 1) {
					if (S == 0) {
						if (T_cig <= 1825) {
							P_cig = (multPesoEdadH(T_cig)) * P_dejaf;
						} else {
							P_cig = 0.0939 * P_dejaf;
						}

					} else {
						if (T_cig <= 1825) {
							P_cig = (multPesoEdadM(T_cig)) * P_dejaf;

						} else {
							P_cig = 0.1354 * P_dejaf;
						}
					}
				} else {
					P_cig = 0;
				}
			} else {
				P_cig = 0;
			}
			// Actividad fisica
			P_re = P + P_cig;

			if (S == 0) {
				BEE = (293 - (3.8 * Ed) + (456.4 * Alt) + (10.12 * P_re));
			} else {
				BEE = (204 - (4 * Ed) + (450.5 * Alt) + (11.69 * P_re));
			}
			P1 = ((met1 - 1) * (((1.15 / 0.9) * t1) / 1440)) / (BEE / (0.0175 * 1440 * P_re));
			P2 = ((met2 - 1) * (((1.15 / 0.9) * t2) / 1440)) / (BEE / (0.0175 * 1440 * P_re));
			P3 = ((met3 - 1) * (((1.15 / 0.9) * t3) / 1440)) / (BEE / (0.0175 * 1440 * P_re));
			P4 = ((met4 - 1) * (((1.15 / 0.9) * t4) / 1440)) / (BEE / (0.0175 * 1440 * P_re));
			P5 = ((met5 - 1) * (((1.15 / 0.9) * t5) / 1440)) / (BEE / (0.0175 * 1440 * P_re));
			PAL = P1 + P2 + P3 + P4 + P5;
			// Sector peso
			if(T_tra<=Ed_c) {
				Sub_Cal=1;
			}else {
				Sub_Cal=3;
			}
			if(T_tra<=Ed_c) {
				Baj_Cal=0;
			}else {
				Baj_Cal=2;
			}
			
			if (op_CalExt==1) {
				Dec_d =Sub_Cal ;
			} else {
				Dec_d =Baj_Cal;
			}
			T_com = PAL;
			if (S == 0) {
				PA = multN_H(T_com);

			} else {
				PA = multN_M(T_com);

			}

			if (S == 0) {
				TEE = (864 - (9.72 * Ed) + (PA * (14.2 * P_re) + (503 * Alt)));
			} else {
				TEE = (387 - (7.31 * Ed) + (PA * (10.9 * P_re) + (660.7 * Alt)));
			}

			// RIESGO HTA
			Reg_Ed = Ed - (Eact - 20);
			if (S == 1) {
				R_Ed = ((C_Ed * (multRegPesoEdadH(Reg_Ed))) * Ed);
			} else {
				R_Ed = ((C_Ed * ((multRegPesoEdadM(Reg_Ed)))) * Ed);
			}
			if (T_tra >= cig_c) {
				if (op_cig == 1) {
					R_Cig = 0;
				} else {
					R_Cig = C_cig;
				}
			} else {
				R_Cig = op_cig * C_cig;
			}
			R_DBP = DBP * C_DBP;
			R_SBP = SBP * C_SBP;
			R_ExDBP = DBP * C_ExDBP * Ed;

			R_IMC = IMC * C_BMI;
			Sum_F = Beta + R_DBP + R_Her + R_Cig + R_IMC + R_ExDBP + R_SBP + R_Ed + R_se;
			Ec_HTA = (1 - Math.exp(-Math.exp((Math.log(1) - Sum_F) / scala))) * 100;
			
			if(antecedentesDM2==0) {
				Pun_ant=0;
			}else {
				if(antecedentesDM2==1) {
					Pun_ant=3;
				}else {
					Pun_ant=5;
				}
			}
			if(ali==0) {
				Pun_ali=0;
			}else {
				Pun_ali=1;
			}
			if(PAL>0) {
				Pun_act_fis=0;
			}else {
				Pun_act_fis=2;
			}
			
			if(per_abd<94) {
				Tabla_per_hom=0;
			}else {
				if(per_abd<102) {
					Tabla_per_hom=3;
				}else {
					Tabla_per_hom=4;
				}
			}
			if(per_abd<80) {
				Tabla_per_muj=0;
			}else {
				if(per_abd<88) {
					Tabla_per_muj=3;
				}else {
					Tabla_per_muj=4;
				}
			}
			if(S==1) {
				Per_Sex=Tabla_per_muj;
			}else {
				Per_Sex=Tabla_per_hom;
			}
			if(Ed<45) {
				Tabla_edad=0;
			}else {
				if(Ed<54) {
					Tabla_edad=2;
				}else {
					if(Ed<64) {
						Tabla_edad=3;
					}else {
						Tabla_edad=4;
					}
				}
			}
			
			if(IMC<25) {
				Tabla_IMC=0;
			}else {
				if(IMC<30) {
					Tabla_IMC=1;
				}else {
					Tabla_IMC=3;
				}
			}
			if(niv_glu==1) {
				Pun_niv_glu=5;
			}else {
				Pun_niv_glu=0;
			}
			if(med_HTA==1) {
				Pun_med_HTA=2;
			}else {
				Pun_med_HTA=0;
			}
			Sum_puntos=Pun_ant+Pun_ali+Pun_act_fis+Tabla_edad+Tabla_IMC+Pun_niv_glu+Pun_med_HTA+Per_Sex;
			if(Sum_puntos<7) {
				Riesgo_DM2=1;
			}else {
				if(Sum_puntos<11) {
					Riesgo_DM2=4;
				}else {
					if(Sum_puntos<14) {
						Riesgo_DM2=17;
					}else {
						if(Sum_puntos<20) {
							Riesgo_DM2=33;
						}else {
							Riesgo_DM2=50;
						}
					}
				}
			}
			
			if (Cont == 1) {
				if (Ec_HTA < 100) {
					R_HTA = Ec_HTA;
					
					this.listRiesgoHTA.add(R_HTA);
					this.listRiesgoDm2.add(Riesgo_DM2);
					this.listEdad.add(Ed);
					this.listPal.add(Math.round(PAL * 1000d) / 1000d);
					this.listImc.add(Math.round(IMC * 1000d) / 1000d);
					this.listPeso.add(P_re);
					
					//System.out.println("PAL= "+df.format(PAL));
				} else {
					R_HTA = 100;
					this.listRiesgoHTA.add(R_HTA);
					this.listRiesgoDm2.add(Riesgo_DM2);
					this.listEdad.add(Ed);
					this.listPal.add(Math.round(PAL * 1000d) / 1000d);
					this.listImc.add(Math.round(IMC * 1000d) / 1000d);
					this.listPeso.add(P_re);
					// System. out. println(lEDAD);
				}
			} else {
				R_HTA = 0;
			}
			// Declaración de flujos
			// auxiliares
			if (aux1 <= 364) {
				// Cont=Cont+pasosimu;
				Cont = 0;
				aux1 = aux1 + 1;
			} else {
				Cont = 1;
				aux1 = 1;
			}

			if (T_tra >= (cig_c)) {
				F_dia = 365;
			} else {
				F_dia = 0;
			}
			if (R_Cig == 0) {
				if (op_cig == 1) {
					if (Tempo <= 1.5) {
						if (Tempo >= 0.4) {
							F_pdef = P * 365;
						} else {
							F_pdef = 0;
						}
					} else {
						F_pdef = 0;
					}
				} else {
					F_pdef = 0;
				}
			} else {
				F_pdef = 0;
			}
			if (Dec_d == 1) {
				AC = (Cal_Ex/aux3);
			} else {
				AC = 0;
			}
			if (Dec_d == 0) {
				DC = (Cal_Ex/aux3);
			} else {
				DC = 0;
			}
			IMC = P_re / (Alt * Alt);
			if (IMC < 18.5) {
				EI_ade = TEE;
			} else {
				EI_ade = EI;
			}
			EB = EI_ade - TEE;
			if (EB >= 0) {
				AP = (EB / Con_C_Kg) * 365;
			} else {
				AP = 0;
			}
			if (EB < 0) {
				DP = (Math.abs(EB / Con_C_Kg)) * 365;

			} else {
				DP = 0;
			}

			// Niveles
			// Auxiliares
			Ed = Ed + Cont;
			T_tra = T_tra + (F_tt * pasoSimu);
			T_cig = T_cig + (F_dia * pasoSimu);
			Tempo = Tempo - (Fs_tempo * pasoSimu);
			P_dejaf = P_dejaf + (F_pdef * pasoSimu);
			// Sector peso
			P = P + (AP * pasoSimu) - (DP * pasoSimu);

			aux2 = aux2 + 1;
			EI = EI + (AC * pasoSimu) - (DC * pasoSimu);

			tiempoI = tiempoI + pasoSimu;
			//System. out. println("EDAD: "+aux2+" R_DBP:"+R_DBP+" R_Her: "+R_Her+" R_Cig: "+R_Cig+" R_IMC: "+R_IMC+" R_ExDBP: "+R_ExDBP +" R_SBP "+R_SBP+" R_Ed:"+R_Ed+" R_se: "+R_se);
			//System. out. println("EDAD: "+aux2+" SBP: "+SBP+" DBP: "+DBP);
		} // fin while

	}

}
